{
	"name": "PL_TransactionalEntities",
	"properties": {
		"activities": [
			{
				"name": "Transactional_Entities",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "RunStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[spGet_PipelineParameters_Entities]",
						"storedProcedureParameters": {
							"entityType": {
								"type": "String",
								"value": "Transactional"
							},
							"pipeline": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.PipelineName",
									"type": "Expression"
								}
							},
							"sequenceGroup": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.SequenceGroup",
									"type": "Expression"
								}
							},
							"srcSystem": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceSystemName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_Control",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Entity",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Transactional_Entities",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Transactional_Entities').output.value",
						"type": "Expression"
					},
					"isSequential": false,
					"activities": [
						{
							"name": "Delete Transformed",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "PipelineParameters LogStart",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_Datalake_PipeDelimited",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@item().DatalakeContainer",
											"type": "Expression"
										},
										"Directory": {
											"value": "@item().DatalakeDirectory_Transformed",
											"type": "Expression"
										},
										"Filename": {
											"value": "@item().DatalakeFilename",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "PipelineParameters LogStart",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[spUpdate_PipelineParameters_LogStart]",
								"storedProcedureParameters": {
									"dtLastPipelineRunStart": {
										"value": {
											"value": "@{utcnow()}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"guidLastPipelineRun": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"strEntity": {
										"value": {
											"value": "@item().Entity",
											"type": "Expression"
										},
										"type": "String"
									},
									"strSourceSystem": {
										"value": {
											"value": "@item().SrcSystem",
											"type": "Expression"
										},
										"type": "String"
									},
									"strEntityType": {
										"value": {
											"value": "@item().EntityType",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Control",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "If RowsCopied",
							"type": "IfCondition",
							"dependsOn": [
								{
									"activity": "Delete Transformed",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "OH to Staging",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"expression": {
									"value": "@greater(activity('OH to Staging').output.rowsCopied,0)",
									"type": "Expression"
								},
								"ifFalseActivities": [
									{
										"name": "PipelineParameters LogEnd",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Script - Entity RowCount",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[spUpdate_PipelineParameters_LogEnd]",
											"storedProcedureParameters": {
												"dtLastPipelineRunEnd": {
													"value": {
														"value": "@{utcnow()}",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"strEntity": {
													"value": {
														"value": "@item().Entity",
														"type": "Expression"
													},
													"type": "String"
												},
												"strEntityType": {
													"value": {
														"value": "@item().EntityType",
														"type": "Expression"
													},
													"type": "String"
												},
												"strLastPipelineRunStatus": {
													"value": "Succeeded",
													"type": "String"
												},
												"strSourceSystem": {
													"value": {
														"value": "@item().SrcSystem",
														"type": "Expression"
													},
													"type": "String"
												},
												"intDestEntityRowCount": {
													"value": {
														"value": "@activity('Script - Entity RowCount').output.outputParameters.RowCount",
														"type": "Expression"
													},
													"type": "Int32"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "Control",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Script - Entity RowCount",
										"type": "Script",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "SqlServer_OnPrem",
											"type": "LinkedServiceReference",
											"parameters": {
												"ServerName": {
													"value": "@item().srcServer",
													"type": "Expression"
												},
												"DatabaseName": {
													"value": "@item().srcDatabase",
													"type": "Expression"
												}
											}
										},
										"typeProperties": {
											"scripts": [
												{
													"parameters": [
														{
															"name": "RowCount",
															"type": "Int32",
															"value": null,
															"direction": "Output"
														}
													],
													"type": "Query",
													"text": {
														"value": "@concat('select @RowCount = count(*) from d365.', item().DestEntity)",
														"type": "Expression"
													}
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									}
								],
								"ifTrueActivities": [
									{
										"name": "Switch Entity",
										"type": "Switch",
										"dependsOn": [
											{
												"activity": "Staging to Transformed",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"userProperties": [],
										"typeProperties": {
											"on": {
												"value": "@item().Entity",
												"type": "Expression"
											},
											"cases": [
												{
													"value": "Transaction",
													"activities": [
														{
															"name": "Trfd_to_Dest - Transaction",
															"type": "Copy",
															"dependsOn": [],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"source": {
																	"type": "DelimitedTextSource",
																	"storeSettings": {
																		"type": "AzureBlobFSReadSettings",
																		"recursive": true,
																		"enablePartitionDiscovery": false
																	},
																	"formatSettings": {
																		"type": "DelimitedTextReadSettings"
																	}
																},
																"sink": {
																	"type": "CommonDataServiceForAppsSink",
																	"writeBatchSize": 10,
																	"writeBehavior": "upsert",
																	"ignoreNullValues": false,
																	"alternateKeyName": {
																		"value": "@item().UpsertKeyColumn",
																		"type": "Expression"
																	}
																},
																"enableStaging": false,
																"enableSkipIncompatibleRow": true,
																"translator": {
																	"type": "TabularTranslator",
																	"mappings": [
																		{
																			"source": {
																				"name": "phg_balance",
																				"type": "Decimal",
																				"physicalType": "Decimal"
																			},
																			"sink": {
																				"name": "phg_balance",
																				"type": "Decimal"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_charges",
																				"type": "Decimal",
																				"physicalType": "Decimal"
																			},
																			"sink": {
																				"name": "phg_charges",
																				"type": "Decimal"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_date",
																				"type": "DateTime",
																				"physicalType": "DateTime"
																			},
																			"sink": {
																				"name": "phg_date",
																				"type": "DateTime"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_debit",
																				"type": "Decimal",
																				"physicalType": "Decimal"
																			},
																			"sink": {
																				"name": "phg_debit",
																				"type": "Decimal"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_integrationkey",
																				"type": "String",
																				"physicalType": "String"
																			},
																			"sink": {
																				"name": "phg_integrationkey",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_name",
																				"type": "String",
																				"physicalType": "String"
																			},
																			"sink": {
																				"name": "phg_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_transactionnumber",
																				"type": "String",
																				"physicalType": "String"
																			},
																			"sink": {
																				"name": "phg_transactionnumber",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_transactiontypeid",
																				"type": "Guid",
																				"physicalType": "Guid"
																			},
																			"sink": {
																				"name": "phg_transactiontypeid",
																				"type": "Guid"
																			}
																		},
																		{
																			"source": {
																				"name": "transactioncurrencyid",
																				"type": "Guid",
																				"physicalType": "Guid"
																			},
																			"sink": {
																				"name": "transactioncurrencyid",
																				"type": "Guid"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_accountid",
																				"type": "Guid",
																				"physicalType": "Guid"
																			},
																			"sink": {
																				"name": "phg_accountid",
																				"type": "Guid"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_checksum",
																				"type": "String",
																				"physicalType": "String"
																			},
																			"sink": {
																				"name": "phg_checksum",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_breakdownnumber",
																				"type": "Int32",
																				"physicalType": "Int32"
																			},
																			"sink": {
																				"name": "phg_breakdownnumber",
																				"type": "Int32"
																			}
																		}
																	],
																	"typeConversion": true,
																	"typeConversionSettings": {
																		"allowDataTruncation": true,
																		"treatBooleanAsNumber": false
																	}
																}
															},
															"inputs": [
																{
																	"referenceName": "DS_Datalake_PipeDelimited",
																	"type": "DatasetReference",
																	"parameters": {
																		"Container": {
																			"value": "@item().DatalakeContainer",
																			"type": "Expression"
																		},
																		"Directory": {
																			"value": "@item().DatalakeDirectory_Transformed",
																			"type": "Expression"
																		},
																		"Filename": {
																			"value": "@item().DatalakeFilename",
																			"type": "Expression"
																		}
																	}
																}
															],
															"outputs": [
																{
																	"referenceName": "DS_Dataverse",
																	"type": "DatasetReference",
																	"parameters": {
																		"EntityName": {
																			"value": "@item().DestEntity",
																			"type": "Expression"
																		}
																	}
																}
															]
														},
														{
															"name": "PipelineParameters LogEnd - Transaction",
															"type": "SqlServerStoredProcedure",
															"dependsOn": [
																{
																	"activity": "Trfd_to_Dest - Transaction",
																	"dependencyConditions": [
																		"Completed"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"storedProcedureName": "[dbo].[spUpdate_PipelineParameters_LogEnd]",
																"storedProcedureParameters": {
																	"dtLastPipelineRunEnd": {
																		"value": {
																			"value": "@{utcnow()}",
																			"type": "Expression"
																		},
																		"type": "DateTime"
																	},
																	"strEntity": {
																		"value": {
																			"value": "@item().Entity",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"strLastPipelineRunStatus": {
																		"value": {
																			"value": "@{activity('Trfd_to_Dest - Transaction').output.executionDetails[0].status}",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"strSourceSystem": {
																		"value": {
																			"value": "@item().SrcSystem",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"strEntityType": {
																		"value": {
																			"value": "@item().EntityType",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"intDestEntityRowCount": {
																		"value": null,
																		"type": "Int32"
																	}
																}
															},
															"linkedServiceName": {
																"referenceName": "Control",
																"type": "LinkedServiceReference"
															}
														},
														{
															"name": "PipelineAuditDetailLog_2 Transaction",
															"type": "Copy",
															"dependsOn": [
																{
																	"activity": "Trfd_to_Dest - Transaction",
																	"dependencyConditions": [
																		"Completed"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"source": {
																	"type": "AzureSqlSource",
																	"sqlReaderQuery": {
																		"value": "SELECT \n\n'@{pipeline().DataFactory}' as DataFactoryName,\n'@{pipeline().Pipeline}' as PipelineName,\n'@{pipeline().RunId}' as RunID,\n\n'@{item().SrcSystem}' as SrcSystem,\n'@{item().SrcStoredProcedure}' as Source,\n'@{item().DestEntity}' as Destination,\n'Trfd_to_Dest - Transaction' as CopyActivity,\n\n'@{pipeline().TriggerType}' as TriggerType,\n'@{pipeline().TriggerId}' as TriggerID,\n'@{pipeline().TriggerName}' as TriggerName,\n'@{pipeline().TriggerTime}' as TriggerTime,\n\n'@{activity('Trfd_to_Dest - Transaction').output.rowsCopied}' as RowsCopied,\n'@{activity('Trfd_to_Dest - Transaction').output.rowsRead}' as RowsRead,\n'@{activity('Trfd_to_Dest - Transaction').output.rowsSkipped}' as RowsSkipped,\n'@{activity('Trfd_to_Dest - Transaction').output.usedParallelCopies}' as ParallelCopies,\n'@{activity('Trfd_to_Dest - Transaction').output.copyDuration}' as CopyDuration_SS,\n'@{activity('Trfd_to_Dest - Transaction').output.effectiveIntegrationRuntime}' as EffectiveIntegrationRuntime,\n\n'@{activity('Trfd_to_Dest - Transaction').output.executionDetails[0].source.type}' as SourceType,\n'@{activity('Trfd_to_Dest - Transaction').output.executionDetails[0].sink.type}' as SinkType,\n'@{activity('Trfd_to_Dest - Transaction').output.executionDetails[0].status}' as ExecutionStatus,\n'@{activity('Trfd_to_Dest - Transaction').output.executionDetails[0].start}' as CopyActivity_StartTime,\n'@{utcnow()}' as CopyActivity_EndTime,\n'@{activity('Trfd_to_Dest - Transaction').output.executionDetails[0].detailedDurations.queuingDuration}' as CopyActivity_QueuingDuration_SS,\n'@{activity('Trfd_to_Dest - Transaction').output.executionDetails[0].detailedDurations.queuingDuration}' as CopyActivity_TimeToFirstByte_SS,\n'@{activity('Trfd_to_Dest - Transaction').output.executionDetails[0].detailedDurations.transferDuration}' as CopyActivity_TransferDuration_SS,\n2 as CopyActivity_Stage,\n'@{pipeline().parameters.SequenceGroup}' as SequenceGroup\n\n",
																		"type": "Expression"
																	},
																	"queryTimeout": "02:00:00",
																	"partitionOption": "None"
																},
																"sink": {
																	"type": "AzureSqlSink",
																	"writeBehavior": "insert",
																	"sqlWriterUseTableLock": false
																},
																"enableStaging": false,
																"translator": {
																	"type": "TabularTranslator",
																	"typeConversion": true,
																	"typeConversionSettings": {
																		"allowDataTruncation": true,
																		"treatBooleanAsNumber": false
																	}
																}
															},
															"inputs": [
																{
																	"referenceName": "DS_SQL_Control",
																	"type": "DatasetReference"
																}
															],
															"outputs": [
																{
																	"referenceName": "DS_SQL_Control_Tbl",
																	"type": "DatasetReference",
																	"parameters": {
																		"SchemaName": "dbo",
																		"TableName": "PipelineAuditDetailLog"
																	}
																}
															]
														}
													]
												},
												{
													"value": "DiaryNote",
													"activities": [
														{
															"name": "Trfd_to_Dest - DiaryNote",
															"type": "Copy",
															"dependsOn": [],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"source": {
																	"type": "DelimitedTextSource",
																	"storeSettings": {
																		"type": "AzureBlobFSReadSettings",
																		"recursive": true,
																		"enablePartitionDiscovery": false
																	},
																	"formatSettings": {
																		"type": "DelimitedTextReadSettings"
																	}
																},
																"sink": {
																	"type": "CommonDataServiceForAppsSink",
																	"writeBatchSize": 10,
																	"writeBehavior": "upsert",
																	"ignoreNullValues": false,
																	"alternateKeyName": {
																		"value": "@item().UpsertKeyColumn",
																		"type": "Expression"
																	}
																},
																"enableStaging": false,
																"enableSkipIncompatibleRow": true,
																"translator": {
																	"type": "TabularTranslator",
																	"mappings": [
																		{
																			"source": {
																				"name": "phg_accountid",
																				"type": "Guid",
																				"physicalType": "Guid"
																			},
																			"sink": {
																				"name": "phg_accountid",
																				"type": "Guid"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_contactid",
																				"type": "Guid",
																				"physicalType": "Guid"
																			},
																			"sink": {
																				"name": "phg_contactid",
																				"type": "Guid"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_entrydate",
																				"type": "DateTime",
																				"physicalType": "DateTime"
																			},
																			"sink": {
																				"name": "phg_entrydate",
																				"type": "DateTime"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_entrystatus",
																				"type": "Int32",
																				"physicalType": "Int32"
																			},
																			"sink": {
																				"name": "phg_entrystatus",
																				"type": "Int32"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_entrytext",
																				"type": "String",
																				"physicalType": "String"
																			},
																			"sink": {
																				"name": "phg_entrytext",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_entrytype",
																				"type": "String",
																				"physicalType": "String"
																			},
																			"sink": {
																				"name": "phg_entrytype",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_referencetype",
																				"type": "Int32",
																				"physicalType": "Int32"
																			},
																			"sink": {
																				"name": "phg_referencetype",
																				"type": "Int32"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_integrationkey",
																				"type": "String",
																				"physicalType": "String"
																			},
																			"sink": {
																				"name": "phg_integrationkey",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_name",
																				"type": "String",
																				"physicalType": "String"
																			},
																			"sink": {
																				"name": "phg_name",
																				"type": "String"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_sequence",
																				"type": "Int32",
																				"physicalType": "Int32"
																			},
																			"sink": {
																				"name": "phg_sequence",
																				"type": "Int32"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_tenancyid",
																				"type": "Guid",
																				"physicalType": "Guid"
																			},
																			"sink": {
																				"name": "phg_tenancyid",
																				"type": "Guid"
																			}
																		},
																		{
																			"source": {
																				"name": "phg_checksum",
																				"type": "String",
																				"physicalType": "String"
																			},
																			"sink": {
																				"name": "phg_checksum",
																				"type": "String"
																			}
																		}
																	],
																	"typeConversion": true,
																	"typeConversionSettings": {
																		"allowDataTruncation": true,
																		"treatBooleanAsNumber": false
																	}
																}
															},
															"inputs": [
																{
																	"referenceName": "DS_Datalake_PipeDelimited",
																	"type": "DatasetReference",
																	"parameters": {
																		"Container": {
																			"value": "@item().DatalakeContainer",
																			"type": "Expression"
																		},
																		"Directory": {
																			"value": "@item().DatalakeDirectory_Transformed",
																			"type": "Expression"
																		},
																		"Filename": {
																			"value": "@item().DatalakeFilename",
																			"type": "Expression"
																		}
																	}
																}
															],
															"outputs": [
																{
																	"referenceName": "DS_Dataverse",
																	"type": "DatasetReference",
																	"parameters": {
																		"EntityName": {
																			"value": "@item().DestEntity",
																			"type": "Expression"
																		}
																	}
																}
															]
														},
														{
															"name": "PipelineAuditDetailLog_2 DiaryNote",
															"type": "Copy",
															"dependsOn": [
																{
																	"activity": "Trfd_to_Dest - DiaryNote",
																	"dependencyConditions": [
																		"Completed"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"source": {
																	"type": "AzureSqlSource",
																	"sqlReaderQuery": {
																		"value": "SELECT \n\n'@{pipeline().DataFactory}' as DataFactoryName,\n'@{pipeline().Pipeline}' as PipelineName,\n'@{pipeline().RunId}' as RunID,\n\n'@{item().SrcSystem}' as SrcSystem,\n'@{item().SrcStoredProcedure}' as Source,\n'@{item().DestEntity}' as Destination,\n'Trfd_to_Dest - DiaryNote' as CopyActivity,\n\n'@{pipeline().TriggerType}' as TriggerType,\n'@{pipeline().TriggerId}' as TriggerID,\n'@{pipeline().TriggerName}' as TriggerName,\n'@{pipeline().TriggerTime}' as TriggerTime,\n\n'@{activity('Trfd_to_Dest - DiaryNote').output.rowsCopied}' as RowsCopied,\n'@{activity('Trfd_to_Dest - DiaryNote').output.rowsRead}' as RowsRead,\n'@{activity('Trfd_to_Dest - DiaryNote').output.rowsSkipped}' as RowsSkipped,\n'@{activity('Trfd_to_Dest - DiaryNote').output.usedParallelCopies}' as ParallelCopies,\n'@{activity('Trfd_to_Dest - DiaryNote').output.copyDuration}' as CopyDuration_SS,\n'@{activity('Trfd_to_Dest - DiaryNote').output.effectiveIntegrationRuntime}' as EffectiveIntegrationRuntime,\n\n'@{activity('Trfd_to_Dest - DiaryNote').output.executionDetails[0].source.type}' as SourceType,\n'@{activity('Trfd_to_Dest - DiaryNote').output.executionDetails[0].sink.type}' as SinkType,\n'@{activity('Trfd_to_Dest - DiaryNote').output.executionDetails[0].status}' as ExecutionStatus,\n'@{activity('Trfd_to_Dest - DiaryNote').output.executionDetails[0].start}' as CopyActivity_StartTime,\n'@{utcnow()}' as CopyActivity_EndTime,\n'@{activity('Trfd_to_Dest - DiaryNote').output.executionDetails[0].detailedDurations.queuingDuration}' as CopyActivity_QueuingDuration_SS,\n'@{activity('Trfd_to_Dest - DiaryNote').output.executionDetails[0].detailedDurations.queuingDuration}' as CopyActivity_TimeToFirstByte_SS,\n'@{activity('Trfd_to_Dest - DiaryNote').output.executionDetails[0].detailedDurations.transferDuration}' as CopyActivity_TransferDuration_SS,\n2 as CopyActivity_Stage,\n'@{pipeline().parameters.SequenceGroup}' as SequenceGroup\n\n",
																		"type": "Expression"
																	},
																	"queryTimeout": "02:00:00",
																	"partitionOption": "None"
																},
																"sink": {
																	"type": "AzureSqlSink",
																	"writeBehavior": "insert",
																	"sqlWriterUseTableLock": false
																},
																"enableStaging": false,
																"translator": {
																	"type": "TabularTranslator",
																	"typeConversion": true,
																	"typeConversionSettings": {
																		"allowDataTruncation": true,
																		"treatBooleanAsNumber": false
																	}
																}
															},
															"inputs": [
																{
																	"referenceName": "DS_SQL_Control",
																	"type": "DatasetReference"
																}
															],
															"outputs": [
																{
																	"referenceName": "DS_SQL_Control_Tbl",
																	"type": "DatasetReference",
																	"parameters": {
																		"SchemaName": "dbo",
																		"TableName": "PipelineAuditDetailLog"
																	}
																}
															]
														},
														{
															"name": "PipelineParameters LogEnd - DiaryNote",
															"type": "SqlServerStoredProcedure",
															"dependsOn": [
																{
																	"activity": "Trfd_to_Dest - DiaryNote",
																	"dependencyConditions": [
																		"Completed"
																	]
																}
															],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"storedProcedureName": "[dbo].[spUpdate_PipelineParameters_LogEnd]",
																"storedProcedureParameters": {
																	"dtLastPipelineRunEnd": {
																		"value": {
																			"value": "@{utcnow()}",
																			"type": "Expression"
																		},
																		"type": "DateTime"
																	},
																	"strEntity": {
																		"value": {
																			"value": "@item().Entity",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"strEntityType": {
																		"value": {
																			"value": "@item().EntityType",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"strLastPipelineRunStatus": {
																		"value": {
																			"value": "@{activity('Trfd_to_Dest - DiaryNote').output.executionDetails[0].status}",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"strSourceSystem": {
																		"value": {
																			"value": "@item().SrcSystem",
																			"type": "Expression"
																		},
																		"type": "String"
																	},
																	"intDestEntityRowCount": {
																		"value": null,
																		"type": "Int32"
																	}
																}
															},
															"linkedServiceName": {
																"referenceName": "Control",
																"type": "LinkedServiceReference"
															}
														}
													]
												}
											]
										}
									},
									{
										"name": "Staging to Transformed",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Entity - Staging",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"enableSkipIncompatibleRow": true,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_SQL_OnPrem_Tbl",
												"type": "DatasetReference",
												"parameters": {
													"ServerName": {
														"value": "@item().SrcServer",
														"type": "Expression"
													},
													"DatabaseName": {
														"value": "@item().SrcDatabase",
														"type": "Expression"
													},
													"SchemaName": {
														"value": "@item().SrcSchema",
														"type": "Expression"
													},
													"TableName": {
														"value": "@item().SrcTable",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_Datalake_PipeDelimited",
												"type": "DatasetReference",
												"parameters": {
													"Container": {
														"value": "@item().DatalakeContainer",
														"type": "Expression"
													},
													"Directory": {
														"value": "@item().DatalakeDirectory_Transformed",
														"type": "Expression"
													},
													"Filename": {
														"value": "@item().DatalakeFilename",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "PipelineAuditDetailLog_1",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Staging to Transformed",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "AzureSqlSource",
												"sqlReaderQuery": {
													"value": "SELECT \n\n'@{pipeline().DataFactory}' as DataFactoryName,\n'@{pipeline().Pipeline}' as PipelineName,\n'@{pipeline().RunId}' as RunID,\n\n'@{item().SrcSystem}' as SrcSystem,\n'@{item().SrcStoredProcedure}' as Source,\n'@{item().DestEntity}' as Destination,\n'Staging to Transformed' as CopyActivity,\n\n'@{pipeline().TriggerType}' as TriggerType,\n'@{pipeline().TriggerId}' as TriggerID,\n'@{pipeline().TriggerName}' as TriggerName,\n'@{pipeline().TriggerTime}' as TriggerTime,\n\n'@{activity('Staging to Transformed').output.rowsCopied}' as RowsCopied,\n'@{activity('Staging to Transformed').output.rowsRead}' as RowsRead,\n'@{activity('Staging to Transformed').output.rowsSkipped}' as RowsSkipped,\n'@{activity('Staging to Transformed').output.usedParallelCopies}' as ParallelCopies,\n'@{activity('Staging to Transformed').output.copyDuration}' as CopyDuration_SS,\n'@{activity('Staging to Transformed').output.effectiveIntegrationRuntime}' as EffectiveIntegrationRuntime,\n\n'@{activity('Staging to Transformed').output.executionDetails[0].source.type}' as SourceType,\n'@{activity('Staging to Transformed').output.executionDetails[0].sink.type}' as SinkType,\n'@{activity('Staging to Transformed').output.executionDetails[0].status}' as ExecutionStatus,\n'@{activity('Staging to Transformed').output.executionDetails[0].start}' as CopyActivity_StartTime,\n'@{utcnow()}' as CopyActivity_EndTime,\n'@{activity('Staging to Transformed').output.executionDetails[0].detailedDurations.queuingDuration}' as CopyActivity_QueuingDuration_SS,\n'@{activity('Staging to Transformed').output.executionDetails[0].detailedDurations.queuingDuration}' as CopyActivity_TimeToFirstByte_SS,\n'@{activity('Staging to Transformed').output.executionDetails[0].detailedDurations.transferDuration}' as CopyActivity_TransferDuration_SS,\n1 as CopyActivity_Stage,\n'@{pipeline().parameters.SequenceGroup}' as SequenceGroup\n",
													"type": "Expression"
												},
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "AzureSqlSink",
												"writeBehavior": "insert",
												"sqlWriterUseTableLock": false
											},
											"enableStaging": false,
											"translator": {
												"type": "TabularTranslator",
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_SQL_Control",
												"type": "DatasetReference"
											}
										],
										"outputs": [
											{
												"referenceName": "DS_SQL_Control_Tbl",
												"type": "DatasetReference",
												"parameters": {
													"SchemaName": "dbo",
													"TableName": "PipelineAuditDetailLog"
												}
											}
										]
									},
									{
										"name": "Entity - Staging",
										"type": "Switch",
										"dependsOn": [],
										"userProperties": [],
										"typeProperties": {
											"on": {
												"value": "@item().Entity",
												"type": "Expression"
											},
											"cases": [
												{
													"value": "Transaction",
													"activities": [
														{
															"name": "Update - stg_phg_transaction",
															"description": "updates the [phg_balance] field in the [stg_phg_transaction] table",
															"type": "SqlServerStoredProcedure",
															"dependsOn": [],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"storedProcedureName": "[adf].[spUpdate_stg_phg_transaction]"
															},
															"linkedServiceName": {
																"referenceName": "SqlServer_OnPrem",
																"type": "LinkedServiceReference",
																"parameters": {
																	"ServerName": {
																		"value": "@item().SrcServer",
																		"type": "Expression"
																	},
																	"DatabaseName": {
																		"value": "@item().srcDatabase",
																		"type": "Expression"
																	}
																}
															}
														}
													]
												},
												{
													"value": "DiaryNote",
													"activities": [
														{
															"name": "Update - stg_phg_diarynote",
															"description": "updates the [phg_entrytext] field in the [stg_phg_diarynote] table",
															"type": "SqlServerStoredProcedure",
															"dependsOn": [],
															"policy": {
																"timeout": "0.12:00:00",
																"retry": 0,
																"retryIntervalInSeconds": 30,
																"secureOutput": false,
																"secureInput": false
															},
															"userProperties": [],
															"typeProperties": {
																"storedProcedureName": "[adf].[spUpdate_stg_phg_diarynote]"
															},
															"linkedServiceName": {
																"referenceName": "SqlServer_OnPrem",
																"type": "LinkedServiceReference",
																"parameters": {
																	"ServerName": {
																		"value": "@item().SrcServer",
																		"type": "Expression"
																	},
																	"DatabaseName": {
																		"value": "@item().srcDatabase",
																		"type": "Expression"
																	}
																}
															}
														}
													]
												}
											],
											"defaultActivities": [
												{
													"name": "Wait1",
													"type": "Wait",
													"dependsOn": [],
													"userProperties": [],
													"typeProperties": {
														"waitTimeInSeconds": 1
													}
												}
											]
										}
									}
								]
							}
						},
						{
							"name": "PipelineAuditDetailLog_0",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "OH to Staging",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "AzureSqlSource",
									"sqlReaderQuery": {
										"value": "SELECT \n\n'@{pipeline().DataFactory}' as DataFactoryName,\n'@{pipeline().Pipeline}' as PipelineName,\n'@{pipeline().RunId}' as RunID,\n\n'@{item().SrcSystem}' as SrcSystem,\n'@{item().SrcStoredProcedure}' as Source,\n'@{item().DestEntity}' as Destination,\n'OH to Staging' as CopyActivity,\n\n'@{pipeline().TriggerType}' as TriggerType,\n'@{pipeline().TriggerId}' as TriggerID,\n'@{pipeline().TriggerName}' as TriggerName,\n'@{pipeline().TriggerTime}' as TriggerTime,\n\n'@{activity('OH to Staging').output.rowsCopied}' as RowsCopied,\n'@{activity('OH to Staging').output.rowsRead}' as RowsRead,\n'@{activity('OH to Staging').output.rowsSkipped}' as RowsSkipped,\n'@{activity('OH to Staging').output.usedParallelCopies}' as ParallelCopies,\n'@{activity('OH to Staging').output.copyDuration}' as CopyDuration_SS,\n'@{activity('OH to Staging').output.effectiveIntegrationRuntime}' as EffectiveIntegrationRuntime,\n\n'@{activity('OH to Staging').output.executionDetails[0].source.type}' as SourceType,\n'@{activity('OH to Staging').output.executionDetails[0].sink.type}' as SinkType,\n'@{activity('OH to Staging').output.executionDetails[0].status}' as ExecutionStatus,\n'@{activity('OH to Staging').output.executionDetails[0].start}' as CopyActivity_StartTime,\n'@{utcnow()}' as CopyActivity_EndTime,\n'@{activity('OH to Staging').output.executionDetails[0].detailedDurations.queuingDuration}' as CopyActivity_QueuingDuration_SS,\n'@{activity('OH to Staging').output.executionDetails[0].detailedDurations.queuingDuration}' as CopyActivity_TimeToFirstByte_SS,\n'@{activity('OH to Staging').output.executionDetails[0].detailedDurations.transferDuration}' as CopyActivity_TransferDuration_SS,\n0 as CopyActivity_Stage,\n'@{pipeline().parameters.SequenceGroup}' as SequenceGroup\n",
										"type": "Expression"
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "AzureSqlSink",
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_SQL_Control",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "DS_SQL_Control_Tbl",
									"type": "DatasetReference",
									"parameters": {
										"SchemaName": "dbo",
										"TableName": "PipelineAuditDetailLog"
									}
								}
							]
						},
						{
							"name": "OH to Staging",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "PipelineParameters LogStart",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderStoredProcedureName": {
										"value": "@concat(item().SrcSchema,'.',item().SrcStoredProcedure)",
										"type": "Expression"
									},
									"storedProcedureParameters": {
										"dtLastPipelineRun": {
											"type": "Datetime",
											"value": {
												"value": "@item().LastSuccessfulPipelineRunStart",
												"type": "Expression"
											}
										},
										"strLoadType": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.LoadType",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlServerSink",
									"preCopyScript": {
										"value": "@{concat('truncate table ', item().SrcSchema, '.', item().SrcTable )}",
										"type": "Expression"
									},
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"enableSkipIncompatibleRow": true,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_SQL_OnPrem",
									"type": "DatasetReference",
									"parameters": {
										"ServerName": {
											"value": "@item().SrcServer",
											"type": "Expression"
										},
										"DatabaseName": {
											"value": "@item().SrcDatabase",
											"type": "Expression"
										},
										"SchemaName": {
											"value": "@item().SrcSchema",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_SQL_OnPrem_Tbl",
									"type": "DatasetReference",
									"parameters": {
										"ServerName": {
											"value": "@item().SrcServer",
											"type": "Expression"
										},
										"DatabaseName": {
											"value": "@item().SrcDatabase",
											"type": "Expression"
										},
										"SchemaName": {
											"value": "@item().srcSchema",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().SrcTable",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			},
			{
				"name": "RunStart",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RunStart",
					"value": {
						"value": "@string(utcNow())",
						"type": "Expression"
					}
				}
			},
			{
				"name": "RunEnd",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Entity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RunEnd",
					"value": {
						"value": "@string(utcNow())",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Duration_SS",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "RunEnd",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Duration_SS",
					"value": {
						"value": "@string(div(sub(ticks(formatDateTime(variables('RunEnd'))),ticks(formatDateTime(variables('RunStart')))),10000000))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "PipelineAuditLog - Start",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "RunStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spInsert_PipelineAuditLog_Start]",
					"storedProcedureParameters": {
						"dtRunStart": {
							"value": {
								"value": "@variables('RunStart')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"dtTriggerTime": {
							"value": {
								"value": "@{pipeline().TriggerTime}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"strDataFactory": {
							"value": {
								"value": "@{pipeline().DataFactory}",
								"type": "Expression"
							},
							"type": "String"
						},
						"strPipeline": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"strStatus": {
							"value": "In Progress",
							"type": "String"
						},
						"strTriggeredByPipelineName": {
							"value": {
								"value": "@{pipeline()?.TriggeredByPipelineName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"strTriggeredByPipelineRunID": {
							"value": {
								"value": "@{pipeline()?.TriggeredByPipelineRunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"strTriggerName": {
							"value": {
								"value": "@{pipeline().TriggerName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"strTriggerType": {
							"value": {
								"value": "@{pipeline().TriggerType}",
								"type": "Expression"
							},
							"type": "String"
						},
						"uniqGroupID": {
							"value": {
								"value": "@{pipeline().GroupId}",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"uniqRunID": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"uniqTriggerID": {
							"value": {
								"value": "@guid()",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"strSequenceList": {
							"value": "[T]",
							"type": "String"
						},
						"strLoadType": {
							"value": {
								"value": "@pipeline().parameters.LoadType",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Control",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "PipelineAuditLog - End - Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Duration_SS",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spUpdate_PipelineAuditLog_End]",
					"storedProcedureParameters": {
						"dtRunEnd": {
							"value": {
								"value": "@variables('RunEnd')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"intDuration_SS": {
							"value": {
								"value": "@variables('Duration_SS')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"strStatus": {
							"value": "Succeeded",
							"type": "String"
						},
						"uniqRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Control",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "PipelineAuditLog - End - Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Entity",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spUpdate_PipelineAuditLog_End]",
					"storedProcedureParameters": {
						"dtRunEnd": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"intDuration_SS": {
							"value": "0",
							"type": "Int32"
						},
						"strStatus": {
							"value": "Failed",
							"type": "String"
						},
						"uniqRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Control",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"PipelineName": {
				"type": "string"
			},
			"SourceSystemName": {
				"type": "string"
			},
			"SequenceGroup": {
				"type": "int"
			},
			"LoadType": {
				"type": "string"
			}
		},
		"variables": {
			"RunStart": {
				"type": "String"
			},
			"RunEnd": {
				"type": "String"
			},
			"Duration_SS": {
				"type": "String"
			}
		},
		"folder": {
			"name": "OH_D365_DataSync/Child Packages"
		},
		"annotations": [],
		"lastPublishTime": "2023-11-19T16:58:34Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}