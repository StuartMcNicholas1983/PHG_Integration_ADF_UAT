{
	"name": "PL_ReferenceEntities",
	"properties": {
		"activities": [
			{
				"name": "Reference_Entities",
				"type": "Lookup",
				"dependsOn": [
					{
						"activity": "RunStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.00:10:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderStoredProcedureName": "[dbo].[spGet_PipelineParameters_Entities]",
						"storedProcedureParameters": {
							"entityType": {
								"type": "String",
								"value": "Reference"
							},
							"pipeline": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.PipelineName",
									"type": "Expression"
								}
							},
							"sequenceGroup": {
								"type": "Int32",
								"value": {
									"value": "@pipeline().parameters.SequenceGroup",
									"type": "Expression"
								}
							},
							"srcSystem": {
								"type": "String",
								"value": {
									"value": "@pipeline().parameters.SourceSystemName",
									"type": "Expression"
								}
							}
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "DS_SQL_Control",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Entity",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Reference_Entities",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@activity('Reference_Entities').output.value",
						"type": "Expression"
					},
					"activities": [
						{
							"name": "Delete Transformed",
							"type": "Delete",
							"dependsOn": [
								{
									"activity": "PipelineParameters LogStart",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.00:10:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"dataset": {
									"referenceName": "DS_Datalake_PipeDelimited_Reference",
									"type": "DatasetReference",
									"parameters": {
										"Container": {
											"value": "@item().DatalakeContainer",
											"type": "Expression"
										},
										"Directory": {
											"value": "@item().DatalakeDirectory_Transformed",
											"type": "Expression"
										},
										"Filename": {
											"value": "@item().DatalakeFilename",
											"type": "Expression"
										}
									}
								},
								"enableLogging": false,
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							}
						},
						{
							"name": "Destination to Config",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "Switch Entity",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "CommonDataServiceForAppsSource",
									"query": {
										"value": "@item().FetchXML",
										"type": "Expression"
									}
								},
								"sink": {
									"type": "SqlServerSink",
									"writeBehavior": "upsert",
									"upsertSettings": {
										"useTempDB": true,
										"keys": [
											"phg_integrationkey"
										]
									},
									"sqlWriterUseTableLock": false,
									"tableOption": "autoCreate"
								},
								"enableStaging": false,
								"enableSkipIncompatibleRow": false
							},
							"inputs": [
								{
									"referenceName": "DS_Dataverse",
									"type": "DatasetReference",
									"parameters": {
										"EntityName": {
											"value": "@item().DestEntity",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_SQL_OnPrem_Tbl",
									"type": "DatasetReference",
									"parameters": {
										"ServerName": {
											"value": "@item().SrcServer",
											"type": "Expression"
										},
										"DatabaseName": {
											"value": "@item().SrcDatabase",
											"type": "Expression"
										},
										"SchemaName": "d365",
										"TableName": {
											"value": "@item().DestEntity",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "PipelineParameters LogStart",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[spUpdate_PipelineParameters_LogStart]",
								"storedProcedureParameters": {
									"dtLastPipelineRunStart": {
										"value": {
											"value": "@{utcnow()}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"guidLastPipelineRun": {
										"value": {
											"value": "@pipeline().RunId",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"strEntity": {
										"value": {
											"value": "@item().Entity",
											"type": "Expression"
										},
										"type": "String"
									},
									"strSourceSystem": {
										"value": {
											"value": "@item().SrcSystem",
											"type": "Expression"
										},
										"type": "String"
									},
									"strEntityType": {
										"value": {
											"value": "@item().EntityType",
											"type": "Expression"
										},
										"type": "String"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Control",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "OH to Staging",
							"type": "Copy",
							"dependsOn": [
								{
									"activity": "PipelineParameters LogStart",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "SqlServerSource",
									"sqlReaderStoredProcedureName": {
										"value": "@concat(item().SrcSchema,'.',item().SrcStoredProcedure)",
										"type": "Expression"
									},
									"storedProcedureParameters": {
										"dtLastPipelineRun": {
											"type": "Datetime",
											"value": {
												"value": "@item().LastSuccessfulPipelineRunStart",
												"type": "Expression"
											}
										},
										"strLoadType": {
											"type": "String",
											"value": {
												"value": "@pipeline().parameters.LoadType",
												"type": "Expression"
											}
										}
									},
									"queryTimeout": "02:00:00",
									"partitionOption": "None"
								},
								"sink": {
									"type": "SqlServerSink",
									"preCopyScript": {
										"value": "@{concat('truncate table ', item().SrcSchema, '.', item().SrcTable )}",
										"type": "Expression"
									},
									"writeBehavior": "insert",
									"sqlWriterUseTableLock": false
								},
								"enableStaging": false,
								"enableSkipIncompatibleRow": true,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "DS_SQL_OnPrem",
									"type": "DatasetReference",
									"parameters": {
										"ServerName": {
											"value": "@item().SrcServer",
											"type": "Expression"
										},
										"DatabaseName": {
											"value": "@item().SrcDatabase",
											"type": "Expression"
										},
										"SchemaName": {
											"value": "@item().SrcSchema",
											"type": "Expression"
										}
									}
								}
							],
							"outputs": [
								{
									"referenceName": "DS_SQL_OnPrem_Tbl",
									"type": "DatasetReference",
									"parameters": {
										"ServerName": {
											"value": "@item().SrcServer",
											"type": "Expression"
										},
										"DatabaseName": {
											"value": "@item().SrcDatabase",
											"type": "Expression"
										},
										"SchemaName": {
											"value": "@item().srcSchema",
											"type": "Expression"
										},
										"TableName": {
											"value": "@item().SrcTable",
											"type": "Expression"
										}
									}
								}
							]
						},
						{
							"name": "Switch Entity",
							"type": "Switch",
							"dependsOn": [
								{
									"activity": "OH to Staging",
									"dependencyConditions": [
										"Succeeded"
									]
								},
								{
									"activity": "Delete Transformed",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"userProperties": [],
							"typeProperties": {
								"on": {
									"value": "@item().Entity",
									"type": "Expression"
								},
								"cases": [
									{
										"value": "Vulnerability",
										"activities": [
											{
												"name": "Staging to Transformed - Vulnerability",
												"type": "Copy",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "SqlServerSource",
														"queryTimeout": "02:00:00",
														"partitionOption": "None"
													},
													"sink": {
														"type": "DelimitedTextSink",
														"storeSettings": {
															"type": "AzureBlobFSWriteSettings"
														},
														"formatSettings": {
															"type": "DelimitedTextWriteSettings",
															"quoteAllText": true,
															"fileExtension": ".txt"
														}
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": true,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "phg_code",
																	"type": "String"
																},
																"sink": {
																	"name": "phg_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "phg_name",
																	"type": "String"
																},
																"sink": {
																	"name": "phg_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "phg_integrationkey",
																	"type": "String"
																},
																"sink": {
																	"name": "phg_integrationkey",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "destination",
																	"type": "String"
																},
																"sink": {
																	"name": "destination",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "phg_waterloocode",
																	"type": "String"
																},
																"sink": {
																	"name": "phg_waterloocode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "phg_fortiscode",
																	"type": "String"
																},
																"sink": {
																	"name": "phg_fortiscode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "phg_category",
																	"type": "String"
																},
																"sink": {
																	"name": "phg_category",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "statecode",
																	"type": "String"
																},
																"sink": {
																	"name": "statecode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "statuscode",
																	"type": "String"
																},
																"sink": {
																	"name": "statuscode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "phg_checksum",
																	"type": "String"
																},
																"sink": {
																	"name": "phg_checksum",
																	"type": "String"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_SQL_OnPrem_Tbl",
														"type": "DatasetReference",
														"parameters": {
															"ServerName": {
																"value": "@item().SrcServer",
																"type": "Expression"
															},
															"DatabaseName": {
																"value": "@item().SrcDatabase",
																"type": "Expression"
															},
															"SchemaName": {
																"value": "@item().SrcSchema",
																"type": "Expression"
															},
															"TableName": {
																"value": "@item().SrcTable",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Datalake_PipeDelimited_Reference_Vulnerability",
														"type": "DatasetReference",
														"parameters": {
															"Container": {
																"value": "@item().DatalakeContainer",
																"type": "Expression"
															},
															"Directory": {
																"value": "@item().DatalakeDirectory_Transformed",
																"type": "Expression"
															},
															"Filename": {
																"value": "@item().DatalakeFilename",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "Transformed to Destination - Vulnerability",
												"type": "Copy",
												"dependsOn": [
													{
														"activity": "Staging to Transformed - Vulnerability",
														"dependencyConditions": [
															"Succeeded"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"source": {
														"type": "DelimitedTextSource",
														"storeSettings": {
															"type": "AzureBlobFSReadSettings",
															"recursive": true,
															"enablePartitionDiscovery": false
														},
														"formatSettings": {
															"type": "DelimitedTextReadSettings"
														}
													},
													"sink": {
														"type": "CommonDataServiceForAppsSink",
														"writeBatchSize": 10,
														"writeBehavior": "upsert",
														"ignoreNullValues": false,
														"alternateKeyName": {
															"value": "@item().UpsertKeyColumn",
															"type": "Expression"
														}
													},
													"enableStaging": false,
													"enableSkipIncompatibleRow": true,
													"translator": {
														"type": "TabularTranslator",
														"mappings": [
															{
																"source": {
																	"name": "phg_integrationkey",
																	"type": "String"
																},
																"sink": {
																	"name": "phg_integrationkey",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "phg_code",
																	"type": "String"
																},
																"sink": {
																	"name": "phg_code",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "phg_name",
																	"type": "String"
																},
																"sink": {
																	"name": "phg_name",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "phg_fortiscode",
																	"type": "String"
																},
																"sink": {
																	"name": "phg_fortiscode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "phg_waterloocode",
																	"type": "String"
																},
																"sink": {
																	"name": "phg_waterloocode",
																	"type": "String"
																}
															},
															{
																"source": {
																	"name": "phg_category",
																	"type": "Int32"
																},
																"sink": {
																	"name": "phg_category",
																	"type": "Int32"
																}
															},
															{
																"source": {
																	"name": "statecode",
																	"type": "Int32"
																},
																"sink": {
																	"name": "statecode",
																	"type": "Int32"
																}
															},
															{
																"source": {
																	"name": "statuscode",
																	"type": "Int32"
																},
																"sink": {
																	"name": "statuscode",
																	"type": "Int32"
																}
															},
															{
																"source": {
																	"name": "phg_checksum",
																	"type": "Int32"
																},
																"sink": {
																	"name": "phg_checksum",
																	"type": "Int32"
																}
															}
														],
														"typeConversion": true,
														"typeConversionSettings": {
															"allowDataTruncation": true,
															"treatBooleanAsNumber": false
														}
													}
												},
												"inputs": [
													{
														"referenceName": "DS_Datalake_PipeDelimited_Reference_Vulnerability",
														"type": "DatasetReference",
														"parameters": {
															"Container": {
																"value": "@item().DatalakeContainer",
																"type": "Expression"
															},
															"Directory": {
																"value": "@item().DatalakeDirectory_Transformed",
																"type": "Expression"
															},
															"Filename": {
																"value": "@item().DatalakeFilename",
																"type": "Expression"
															}
														}
													}
												],
												"outputs": [
													{
														"referenceName": "DS_Dataverse",
														"type": "DatasetReference",
														"parameters": {
															"EntityName": {
																"value": "@item().DestEntity",
																"type": "Expression"
															}
														}
													}
												]
											},
											{
												"name": "PipelineParameters LogEnd - Vulnerability",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Script - Entity RowCount - Vulnerability",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[dbo].[spUpdate_PipelineParameters_LogEnd]",
													"storedProcedureParameters": {
														"dtLastPipelineRunEnd": {
															"value": {
																"value": "@utcNow()",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"strEntity": {
															"value": {
																"value": "@item().Entity",
																"type": "Expression"
															},
															"type": "String"
														},
														"strEntityType": {
															"value": {
																"value": "@item().EntityType",
																"type": "Expression"
															},
															"type": "String"
														},
														"strLastPipelineRunStatus": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.executionDetails[0].status}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strSourceSystem": {
															"value": {
																"value": "@item().SrcSystem",
																"type": "Expression"
															},
															"type": "String"
														},
														"intDestEntityRowCount": {
															"value": {
																"value": "@activity('Script - Entity RowCount - Vulnerability').output.outputParameters.RowCount",
																"type": "Expression"
															},
															"type": "Int32"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "Control",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "Script - Entity RowCount - Vulnerability",
												"type": "Script",
												"dependsOn": [
													{
														"activity": "Transformed to Destination - Vulnerability",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "SqlServer_OnPrem",
													"type": "LinkedServiceReference",
													"parameters": {
														"ServerName": {
															"value": "@item().srcServer",
															"type": "Expression"
														},
														"DatabaseName": {
															"value": "@item().srcDatabase",
															"type": "Expression"
														}
													}
												},
												"typeProperties": {
													"scripts": [
														{
															"parameters": [
																{
																	"name": "RowCount",
																	"type": "Int32",
																	"value": null,
																	"direction": "Output"
																}
															],
															"type": "Query",
															"text": {
																"value": "@concat('select @RowCount = count(*) from d365.', item().DestEntity)",
																"type": "Expression"
															}
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											},
											{
												"name": "PipelineAuditDetailLog_1 - Vulnerability",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Staging to Transformed - Vulnerability",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[dbo].[spInsert_PipelineAuditDetailLog]",
													"storedProcedureParameters": {
														"dtCopyActivity_EndTime": {
															"value": {
																"value": "@{utcnow()}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"dtCopyActivity_StartTime": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.executionDetails[0].start}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"dtTriggerTime": {
															"value": {
																"value": "@{pipeline().TriggerTime}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"intCopyActivity_Stage": {
															"value": "1",
															"type": "Int32"
														},
														"intParallelCopies": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.usedParallelCopies}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"intRowsCopied": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.rowsCopied}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"intRowsRead": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.rowsRead}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"intRowsSkipped": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.rowsSkipped}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"intSequenceGroup": {
															"value": {
																"value": "@{pipeline().parameters.SequenceGroup}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"strCopyActivity": {
															"value": "Staging to Transformed",
															"type": "String"
														},
														"strCopyActivity_QueuingDuration_SS": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.executionDetails[0].detailedDurations.queuingDuration}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strCopyActivity_TimeToFirstByte_SS": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.executionDetails[0].detailedDurations.queuingDuration}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strCopyActivity_TransferDuration_SS": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.executionDetails[0].detailedDurations.transferDuration}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strCopyDuration_SS": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.copyDuration}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strDataFactory": {
															"value": {
																"value": "@{pipeline().DataFactory}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strDestination": {
															"value": {
																"value": "@{item().DestEntity}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strEffectiveIntegrationRuntime": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.effectiveIntegrationRuntime}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strExecutionStatus": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.executionDetails[0].status}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strPipeline": {
															"value": {
																"value": "@{pipeline().Pipeline}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strSinkType": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.executionDetails[0].sink.type}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strSource": {
															"value": {
																"value": "@{item().SrcStoredProcedure}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strSourceType": {
															"value": {
																"value": "@{activity('Staging to Transformed - Vulnerability').output.executionDetails[0].source.type}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strSrcSystem": {
															"value": {
																"value": "@{item().SrcSystem}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strTriggerName": {
															"value": {
																"value": "@{pipeline().TriggerName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strTriggerType": {
															"value": {
																"value": "@{pipeline().TriggerType}",
																"type": "Expression"
															},
															"type": "String"
														},
														"uniqRunID": {
															"value": {
																"value": "@{pipeline().RunId}",
																"type": "Expression"
															},
															"type": "Guid"
														},
														"uniqTriggerID": {
															"value": {
																"value": "@{pipeline().TriggerId}",
																"type": "Expression"
															},
															"type": "Guid"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "Control",
													"type": "LinkedServiceReference"
												}
											},
											{
												"name": "PipelineAuditDetailLog_2 - Vulnerability",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [
													{
														"activity": "Transformed to Destination - Vulnerability",
														"dependencyConditions": [
															"Completed"
														]
													}
												],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": "[dbo].[spInsert_PipelineAuditDetailLog]",
													"storedProcedureParameters": {
														"dtCopyActivity_EndTime": {
															"value": {
																"value": "@{utcnow()}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"dtCopyActivity_StartTime": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.executionDetails[0].start}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"dtTriggerTime": {
															"value": {
																"value": "@{pipeline().TriggerTime}",
																"type": "Expression"
															},
															"type": "DateTime"
														},
														"intCopyActivity_Stage": {
															"value": "2",
															"type": "Int32"
														},
														"intParallelCopies": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.usedParallelCopies}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"intRowsCopied": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.rowsCopied}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"intRowsRead": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.rowsRead}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"intRowsSkipped": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.rowsSkipped}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"intSequenceGroup": {
															"value": {
																"value": "@{pipeline().parameters.SequenceGroup}",
																"type": "Expression"
															},
															"type": "Int32"
														},
														"strCopyActivity": {
															"value": "Transformed to Destination",
															"type": "String"
														},
														"strCopyActivity_QueuingDuration_SS": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.executionDetails[0].detailedDurations.queuingDuration}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strCopyActivity_TimeToFirstByte_SS": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.executionDetails[0].detailedDurations.queuingDuration}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strCopyActivity_TransferDuration_SS": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.executionDetails[0].detailedDurations.transferDuration}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strCopyDuration_SS": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.copyDuration}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strDataFactory": {
															"value": {
																"value": "@{pipeline().DataFactory}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strDestination": {
															"value": {
																"value": "@{item().DestEntity}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strEffectiveIntegrationRuntime": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.effectiveIntegrationRuntime}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strExecutionStatus": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.executionDetails[0].status}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strPipeline": {
															"value": {
																"value": "@{pipeline().Pipeline}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strSinkType": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.executionDetails[0].sink.type}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strSource": {
															"value": {
																"value": "@{item().SrcStoredProcedure}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strSourceType": {
															"value": {
																"value": "@{activity('Transformed to Destination - Vulnerability').output.executionDetails[0].source.type}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strSrcSystem": {
															"value": {
																"value": "@{item().SrcSystem}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strTriggerName": {
															"value": {
																"value": "@{pipeline().TriggerName}",
																"type": "Expression"
															},
															"type": "String"
														},
														"strTriggerType": {
															"value": {
																"value": "@{pipeline().TriggerType}",
																"type": "Expression"
															},
															"type": "String"
														},
														"uniqRunID": {
															"value": {
																"value": "@{pipeline().RunId}",
																"type": "Expression"
															},
															"type": "Guid"
														},
														"uniqTriggerID": {
															"value": {
																"value": "@{pipeline().TriggerId}",
																"type": "Expression"
															},
															"type": "Guid"
														}
													}
												},
												"linkedServiceName": {
													"referenceName": "Control",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								],
								"defaultActivities": [
									{
										"name": "Staging to Transformed",
										"type": "Copy",
										"dependsOn": [],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "SqlServerSource",
												"queryTimeout": "02:00:00",
												"partitionOption": "None"
											},
											"sink": {
												"type": "DelimitedTextSink",
												"storeSettings": {
													"type": "AzureBlobFSWriteSettings"
												},
												"formatSettings": {
													"type": "DelimitedTextWriteSettings",
													"quoteAllText": true,
													"fileExtension": ".txt"
												}
											},
											"enableStaging": false,
											"enableSkipIncompatibleRow": true,
											"translator": {
												"type": "TabularTranslator",
												"mappings": [
													{
														"source": {
															"name": "phg_code",
															"type": "String"
														},
														"sink": {
															"name": "phg_code",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "phg_name",
															"type": "String"
														},
														"sink": {
															"name": "phg_name",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "phg_integrationkey",
															"type": "String"
														},
														"sink": {
															"name": "phg_integrationkey",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "destination",
															"type": "String"
														},
														"sink": {
															"name": "destination",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "phg_waterloocode",
															"type": "String"
														},
														"sink": {
															"name": "phg_waterloocode",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "phg_fortiscode",
															"type": "String"
														},
														"sink": {
															"name": "phg_fortiscode",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "statecode",
															"type": "String"
														},
														"sink": {
															"name": "statecode",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "statuscode",
															"type": "String"
														},
														"sink": {
															"name": "statuscode",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "phg_checksum",
															"type": "String"
														},
														"sink": {
															"name": "phg_checksum",
															"type": "String"
														}
													}
												],
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_SQL_OnPrem_Tbl",
												"type": "DatasetReference",
												"parameters": {
													"ServerName": {
														"value": "@item().SrcServer",
														"type": "Expression"
													},
													"DatabaseName": {
														"value": "@item().SrcDatabase",
														"type": "Expression"
													},
													"SchemaName": {
														"value": "@item().SrcSchema",
														"type": "Expression"
													},
													"TableName": {
														"value": "@item().SrcTable",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_Datalake_PipeDelimited_Reference",
												"type": "DatasetReference",
												"parameters": {
													"Container": {
														"value": "@item().DatalakeContainer",
														"type": "Expression"
													},
													"Directory": {
														"value": "@item().DatalakeDirectory_Transformed",
														"type": "Expression"
													},
													"Filename": {
														"value": "@item().DatalakeFilename",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "Transformed to Destination",
										"type": "Copy",
										"dependsOn": [
											{
												"activity": "Staging to Transformed",
												"dependencyConditions": [
													"Succeeded"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"source": {
												"type": "DelimitedTextSource",
												"storeSettings": {
													"type": "AzureBlobFSReadSettings",
													"recursive": true,
													"enablePartitionDiscovery": false
												},
												"formatSettings": {
													"type": "DelimitedTextReadSettings"
												}
											},
											"sink": {
												"type": "CommonDataServiceForAppsSink",
												"writeBatchSize": 10,
												"writeBehavior": "upsert",
												"ignoreNullValues": false,
												"alternateKeyName": {
													"value": "@item().UpsertKeyColumn",
													"type": "Expression"
												}
											},
											"enableStaging": false,
											"enableSkipIncompatibleRow": true,
											"translator": {
												"type": "TabularTranslator",
												"mappings": [
													{
														"source": {
															"name": "phg_integrationkey",
															"type": "String"
														},
														"sink": {
															"name": "phg_integrationkey",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "phg_code",
															"type": "String"
														},
														"sink": {
															"name": "phg_code",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "phg_name",
															"type": "String"
														},
														"sink": {
															"name": "phg_name",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "phg_fortiscode",
															"type": "String"
														},
														"sink": {
															"name": "phg_fortiscode",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "phg_waterloocode",
															"type": "String"
														},
														"sink": {
															"name": "phg_waterloocode",
															"type": "String"
														}
													},
													{
														"source": {
															"name": "statecode",
															"type": "Int32"
														},
														"sink": {
															"name": "statecode",
															"type": "Int32"
														}
													},
													{
														"source": {
															"name": "statuscode",
															"type": "Int32"
														},
														"sink": {
															"name": "statuscode",
															"type": "Int32"
														}
													},
													{
														"source": {
															"name": "phg_checksum",
															"type": "Int32"
														},
														"sink": {
															"name": "phg_checksum",
															"type": "Int32"
														}
													}
												],
												"typeConversion": true,
												"typeConversionSettings": {
													"allowDataTruncation": true,
													"treatBooleanAsNumber": false
												}
											}
										},
										"inputs": [
											{
												"referenceName": "DS_Datalake_PipeDelimited_Reference",
												"type": "DatasetReference",
												"parameters": {
													"Container": {
														"value": "@item().DatalakeContainer",
														"type": "Expression"
													},
													"Directory": {
														"value": "@item().DatalakeDirectory_Transformed",
														"type": "Expression"
													},
													"Filename": {
														"value": "@item().DatalakeFilename",
														"type": "Expression"
													}
												}
											}
										],
										"outputs": [
											{
												"referenceName": "DS_Dataverse",
												"type": "DatasetReference",
												"parameters": {
													"EntityName": {
														"value": "@item().DestEntity",
														"type": "Expression"
													}
												}
											}
										]
									},
									{
										"name": "PipelineParameters LogEnd",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Script - Entity RowCount",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[spUpdate_PipelineParameters_LogEnd]",
											"storedProcedureParameters": {
												"dtLastPipelineRunEnd": {
													"value": {
														"value": "@utcNow()",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"strEntity": {
													"value": {
														"value": "@item().Entity",
														"type": "Expression"
													},
													"type": "String"
												},
												"strEntityType": {
													"value": {
														"value": "@item().EntityType",
														"type": "Expression"
													},
													"type": "String"
												},
												"strLastPipelineRunStatus": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.executionDetails[0].status}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strSourceSystem": {
													"value": {
														"value": "@item().SrcSystem",
														"type": "Expression"
													},
													"type": "String"
												},
												"intDestEntityRowCount": {
													"value": {
														"value": "@activity('Script - Entity RowCount').output.outputParameters.RowCount",
														"type": "Expression"
													},
													"type": "Int32"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "Control",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "Script - Entity RowCount",
										"type": "Script",
										"dependsOn": [
											{
												"activity": "Transformed to Destination",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"linkedServiceName": {
											"referenceName": "SqlServer_OnPrem",
											"type": "LinkedServiceReference",
											"parameters": {
												"ServerName": {
													"value": "@item().srcServer",
													"type": "Expression"
												},
												"DatabaseName": {
													"value": "@item().srcDatabase",
													"type": "Expression"
												}
											}
										},
										"typeProperties": {
											"scripts": [
												{
													"parameters": [
														{
															"name": "RowCount",
															"type": "Int32",
															"value": null,
															"direction": "Output"
														}
													],
													"type": "Query",
													"text": {
														"value": "@concat('select @RowCount = count(*) from d365.', item().DestEntity)",
														"type": "Expression"
													}
												}
											],
											"scriptBlockExecutionTimeout": "02:00:00"
										}
									},
									{
										"name": "PipelineAuditDetailLog_1",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Staging to Transformed",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[spInsert_PipelineAuditDetailLog]",
											"storedProcedureParameters": {
												"dtCopyActivity_EndTime": {
													"value": {
														"value": "@{utcnow()}",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"dtCopyActivity_StartTime": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.executionDetails[0].start}",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"dtTriggerTime": {
													"value": {
														"value": "@{pipeline().TriggerTime}",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"intCopyActivity_Stage": {
													"value": "1",
													"type": "Int32"
												},
												"intParallelCopies": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.usedParallelCopies}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"intRowsCopied": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.rowsCopied}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"intRowsRead": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.rowsRead}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"intRowsSkipped": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.rowsSkipped}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"intSequenceGroup": {
													"value": {
														"value": "@{pipeline().parameters.SequenceGroup}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"strCopyActivity": {
													"value": "Staging to Transformed",
													"type": "String"
												},
												"strCopyActivity_QueuingDuration_SS": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.executionDetails[0].detailedDurations.queuingDuration}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strCopyActivity_TimeToFirstByte_SS": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.executionDetails[0].detailedDurations.queuingDuration}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strCopyActivity_TransferDuration_SS": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.executionDetails[0].detailedDurations.transferDuration}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strCopyDuration_SS": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.copyDuration}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strDataFactory": {
													"value": {
														"value": "@{pipeline().DataFactory}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strDestination": {
													"value": {
														"value": "@{item().DestEntity}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strEffectiveIntegrationRuntime": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.effectiveIntegrationRuntime}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strExecutionStatus": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.executionDetails[0].status}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strPipeline": {
													"value": {
														"value": "@{pipeline().Pipeline}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strSinkType": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.executionDetails[0].sink.type}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strSource": {
													"value": {
														"value": "@{item().SrcStoredProcedure}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strSourceType": {
													"value": {
														"value": "@{activity('Staging to Transformed').output.executionDetails[0].source.type}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strSrcSystem": {
													"value": {
														"value": "@{item().SrcSystem}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strTriggerName": {
													"value": {
														"value": "@{pipeline().TriggerName}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strTriggerType": {
													"value": {
														"value": "@{pipeline().TriggerType}",
														"type": "Expression"
													},
													"type": "String"
												},
												"uniqRunID": {
													"value": {
														"value": "@{pipeline().RunId}",
														"type": "Expression"
													},
													"type": "Guid"
												},
												"uniqTriggerID": {
													"value": {
														"value": "@{pipeline().TriggerId}",
														"type": "Expression"
													},
													"type": "Guid"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "Control",
											"type": "LinkedServiceReference"
										}
									},
									{
										"name": "PipelineAuditDetailLog_2",
										"type": "SqlServerStoredProcedure",
										"dependsOn": [
											{
												"activity": "Transformed to Destination",
												"dependencyConditions": [
													"Completed"
												]
											}
										],
										"policy": {
											"timeout": "0.12:00:00",
											"retry": 0,
											"retryIntervalInSeconds": 30,
											"secureOutput": false,
											"secureInput": false
										},
										"userProperties": [],
										"typeProperties": {
											"storedProcedureName": "[dbo].[spInsert_PipelineAuditDetailLog]",
											"storedProcedureParameters": {
												"dtCopyActivity_EndTime": {
													"value": {
														"value": "@{utcnow()}",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"dtCopyActivity_StartTime": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.executionDetails[0].start}",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"dtTriggerTime": {
													"value": {
														"value": "@{pipeline().TriggerTime}",
														"type": "Expression"
													},
													"type": "DateTime"
												},
												"intCopyActivity_Stage": {
													"value": "2",
													"type": "Int32"
												},
												"intParallelCopies": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.usedParallelCopies}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"intRowsCopied": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.rowsCopied}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"intRowsRead": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.rowsRead}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"intRowsSkipped": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.rowsSkipped}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"intSequenceGroup": {
													"value": {
														"value": "@{pipeline().parameters.SequenceGroup}",
														"type": "Expression"
													},
													"type": "Int32"
												},
												"strCopyActivity": {
													"value": "Transformed to Destination",
													"type": "String"
												},
												"strCopyActivity_QueuingDuration_SS": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.executionDetails[0].detailedDurations.queuingDuration}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strCopyActivity_TimeToFirstByte_SS": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.executionDetails[0].detailedDurations.queuingDuration}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strCopyActivity_TransferDuration_SS": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.executionDetails[0].detailedDurations.transferDuration}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strCopyDuration_SS": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.copyDuration}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strDataFactory": {
													"value": {
														"value": "@{pipeline().DataFactory}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strDestination": {
													"value": {
														"value": "@{item().DestEntity}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strEffectiveIntegrationRuntime": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.effectiveIntegrationRuntime}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strExecutionStatus": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.executionDetails[0].status}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strPipeline": {
													"value": {
														"value": "@{pipeline().Pipeline}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strSinkType": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.executionDetails[0].sink.type}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strSource": {
													"value": {
														"value": "@{item().SrcStoredProcedure}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strSourceType": {
													"value": {
														"value": "@{activity('Transformed to Destination').output.executionDetails[0].source.type}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strSrcSystem": {
													"value": {
														"value": "@{item().SrcSystem}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strTriggerName": {
													"value": {
														"value": "@{pipeline().TriggerName}",
														"type": "Expression"
													},
													"type": "String"
												},
												"strTriggerType": {
													"value": {
														"value": "@{pipeline().TriggerType}",
														"type": "Expression"
													},
													"type": "String"
												},
												"uniqRunID": {
													"value": {
														"value": "@{pipeline().RunId}",
														"type": "Expression"
													},
													"type": "Guid"
												},
												"uniqTriggerID": {
													"value": {
														"value": "@{pipeline().TriggerId}",
														"type": "Expression"
													},
													"type": "Guid"
												}
											}
										},
										"linkedServiceName": {
											"referenceName": "Control",
											"type": "LinkedServiceReference"
										}
									}
								]
							}
						},
						{
							"name": "PipelineAuditDetailLog_0",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "OH to Staging",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[spInsert_PipelineAuditDetailLog]",
								"storedProcedureParameters": {
									"dtCopyActivity_EndTime": {
										"value": {
											"value": "@{utcnow()}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"dtCopyActivity_StartTime": {
										"value": {
											"value": "@{activity('OH to Staging').output.executionDetails[0].start}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"dtTriggerTime": {
										"value": {
											"value": "@{pipeline().TriggerTime}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"intCopyActivity_Stage": {
										"value": "0",
										"type": "Int32"
									},
									"intParallelCopies": {
										"value": {
											"value": "@{activity('OH to Staging').output.usedParallelCopies}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"intRowsCopied": {
										"value": {
											"value": "@{activity('OH to Staging').output.rowsCopied}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"intRowsRead": {
										"value": {
											"value": "@{activity('OH to Staging').output.rowsRead}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"intRowsSkipped": {
										"value": {
											"value": "@{activity('OH to Staging').output.rowsSkipped}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"intSequenceGroup": {
										"value": {
											"value": "@{pipeline().parameters.SequenceGroup}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"strCopyActivity": {
										"value": "OH to Staging",
										"type": "String"
									},
									"strCopyActivity_QueuingDuration_SS": {
										"value": {
											"value": "@{activity('OH to Staging').output.executionDetails[0].detailedDurations.queuingDuration}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strCopyActivity_TimeToFirstByte_SS": {
										"value": {
											"value": "@{activity('OH to Staging').output.executionDetails[0].detailedDurations.queuingDuration}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strCopyActivity_TransferDuration_SS": {
										"value": {
											"value": "@{activity('OH to Staging').output.executionDetails[0].detailedDurations.transferDuration}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strCopyDuration_SS": {
										"value": {
											"value": "@{activity('OH to Staging').output.copyDuration}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strDataFactory": {
										"value": {
											"value": "@{pipeline().DataFactory}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strDestination": {
										"value": {
											"value": "@{item().DestEntity}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strEffectiveIntegrationRuntime": {
										"value": {
											"value": "@{activity('OH to Staging').output.effectiveIntegrationRuntime}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strExecutionStatus": {
										"value": {
											"value": "@{activity('OH to Staging').output.executionDetails[0].status}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strPipeline": {
										"value": {
											"value": "@{pipeline().Pipeline}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strSinkType": {
										"value": {
											"value": "@{activity('OH to Staging').output.executionDetails[0].sink.type}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strSource": {
										"value": {
											"value": "@{item().SrcStoredProcedure}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strSourceType": {
										"value": {
											"value": "@{activity('OH to Staging').output.executionDetails[0].source.type}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strSrcSystem": {
										"value": {
											"value": "@{item().SrcSystem}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strTriggerName": {
										"value": {
											"value": "@{pipeline().TriggerName}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strTriggerType": {
										"value": {
											"value": "@{pipeline().TriggerType}",
											"type": "Expression"
										},
										"type": "String"
									},
									"uniqRunID": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"uniqTriggerID": {
										"value": {
											"value": "@{pipeline().TriggerId}",
											"type": "Expression"
										},
										"type": "Guid"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Control",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "PipelineAuditDetailLog_3",
							"type": "SqlServerStoredProcedure",
							"dependsOn": [
								{
									"activity": "Destination to Config",
									"dependencyConditions": [
										"Completed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"storedProcedureName": "[dbo].[spInsert_PipelineAuditDetailLog]",
								"storedProcedureParameters": {
									"dtCopyActivity_EndTime": {
										"value": {
											"value": "@{utcnow()}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"dtCopyActivity_StartTime": {
										"value": {
											"value": "@{activity('Staging to Transformed').output.executionDetails[0].start}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"dtTriggerTime": {
										"value": {
											"value": "@{pipeline().TriggerTime}",
											"type": "Expression"
										},
										"type": "DateTime"
									},
									"intCopyActivity_Stage": {
										"value": "3",
										"type": "Int32"
									},
									"intParallelCopies": {
										"value": {
											"value": "@{activity('Staging to Transformed').output.usedParallelCopies}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"intRowsCopied": {
										"value": {
											"value": "@{activity('Staging to Transformed').output.rowsCopied}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"intRowsRead": {
										"value": {
											"value": "@{activity('Staging to Transformed').output.rowsRead}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"intRowsSkipped": {
										"value": "0",
										"type": "Int32"
									},
									"intSequenceGroup": {
										"value": {
											"value": "@{pipeline().parameters.SequenceGroup}",
											"type": "Expression"
										},
										"type": "Int32"
									},
									"strCopyActivity": {
										"value": "Destination to Config",
										"type": "String"
									},
									"strCopyActivity_QueuingDuration_SS": {
										"value": {
											"value": "@{activity('Staging to Transformed').output.executionDetails[0].detailedDurations.queuingDuration}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strCopyActivity_TimeToFirstByte_SS": {
										"value": {
											"value": "@{activity('Staging to Transformed').output.executionDetails[0].detailedDurations.queuingDuration}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strCopyActivity_TransferDuration_SS": {
										"value": {
											"value": "@{activity('Staging to Transformed').output.executionDetails[0].detailedDurations.transferDuration}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strCopyDuration_SS": {
										"value": {
											"value": "@{activity('Staging to Transformed').output.copyDuration}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strDataFactory": {
										"value": {
											"value": "@{pipeline().DataFactory}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strDestination": {
										"value": {
											"value": "@{item().DestEntity}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strEffectiveIntegrationRuntime": {
										"value": {
											"value": "@{activity('Staging to Transformed').output.effectiveIntegrationRuntime}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strExecutionStatus": {
										"value": {
											"value": "@{activity('Staging to Transformed').output.executionDetails[0].status}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strPipeline": {
										"value": {
											"value": "@{pipeline().Pipeline}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strSinkType": {
										"value": {
											"value": "@{activity('Staging to Transformed').output.executionDetails[0].sink.type}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strSource": {
										"value": {
											"value": "@{item().SrcStoredProcedure}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strSourceType": {
										"value": {
											"value": "@{activity('Staging to Transformed').output.executionDetails[0].source.type}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strSrcSystem": {
										"value": {
											"value": "@{item().SrcSystem}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strTriggerName": {
										"value": {
											"value": "@{pipeline().TriggerName}",
											"type": "Expression"
										},
										"type": "String"
									},
									"strTriggerType": {
										"value": {
											"value": "@{pipeline().TriggerType}",
											"type": "Expression"
										},
										"type": "String"
									},
									"uniqRunID": {
										"value": {
											"value": "@{pipeline().RunId}",
											"type": "Expression"
										},
										"type": "Guid"
									},
									"uniqTriggerID": {
										"value": {
											"value": "@{pipeline().TriggerId}",
											"type": "Expression"
										},
										"type": "Guid"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "Control",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "RunStart",
				"type": "SetVariable",
				"dependsOn": [],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RunStart",
					"value": {
						"value": "@string(utcNow())",
						"type": "Expression"
					}
				}
			},
			{
				"name": "RunEnd",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "Entity",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "RunEnd",
					"value": {
						"value": "@string(utcNow())",
						"type": "Expression"
					}
				}
			},
			{
				"name": "Duration_SS",
				"type": "SetVariable",
				"dependsOn": [
					{
						"activity": "RunEnd",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"variableName": "Duration_SS",
					"value": {
						"value": "@string(div(sub(ticks(formatDateTime(variables('RunEnd'))),ticks(formatDateTime(variables('RunStart')))),10000000))",
						"type": "Expression"
					}
				}
			},
			{
				"name": "PipelineAuditLog - Start",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "RunStart",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spInsert_PipelineAuditLog_Start]",
					"storedProcedureParameters": {
						"dtRunStart": {
							"value": {
								"value": "@variables('RunStart')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"dtTriggerTime": {
							"value": {
								"value": "@{pipeline().TriggerTime}",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"strDataFactory": {
							"value": {
								"value": "@{pipeline().DataFactory}",
								"type": "Expression"
							},
							"type": "String"
						},
						"strPipeline": {
							"value": {
								"value": "@{pipeline().Pipeline}",
								"type": "Expression"
							},
							"type": "String"
						},
						"strStatus": {
							"value": "In Progress",
							"type": "String"
						},
						"strTriggeredByPipelineName": {
							"value": {
								"value": "@{pipeline()?.TriggeredByPipelineName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"strTriggeredByPipelineRunID": {
							"value": {
								"value": "@{pipeline()?.TriggeredByPipelineRunId}",
								"type": "Expression"
							},
							"type": "String"
						},
						"strTriggerName": {
							"value": {
								"value": "@{pipeline().TriggerName}",
								"type": "Expression"
							},
							"type": "String"
						},
						"strTriggerType": {
							"value": {
								"value": "@{pipeline().TriggerType}",
								"type": "Expression"
							},
							"type": "String"
						},
						"uniqGroupID": {
							"value": {
								"value": "@{pipeline().GroupId}",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"uniqRunID": {
							"value": {
								"value": "@{pipeline().RunId}",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"uniqTriggerID": {
							"value": {
								"value": "@guid()",
								"type": "Expression"
							},
							"type": "Guid"
						},
						"strSequenceList": {
							"value": "[R]",
							"type": "String"
						},
						"strLoadType": {
							"value": {
								"value": "@pipeline().parameters.LoadType",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Control",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "PipelineAuditLog - End - Success",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Duration_SS",
						"dependencyConditions": [
							"Completed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spUpdate_PipelineAuditLog_End]",
					"storedProcedureParameters": {
						"dtRunEnd": {
							"value": {
								"value": "@variables('RunEnd')",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"intDuration_SS": {
							"value": {
								"value": "@variables('Duration_SS')",
								"type": "Expression"
							},
							"type": "Int32"
						},
						"strStatus": {
							"value": "Succeeded",
							"type": "String"
						},
						"uniqRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Control",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "PipelineAuditLog - End - Failed",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Entity",
						"dependencyConditions": [
							"Failed"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[spUpdate_PipelineAuditLog_End]",
					"storedProcedureParameters": {
						"dtRunEnd": {
							"value": {
								"value": "@utcnow()",
								"type": "Expression"
							},
							"type": "DateTime"
						},
						"intDuration_SS": {
							"value": "0",
							"type": "Int32"
						},
						"strStatus": {
							"value": "Failed",
							"type": "String"
						},
						"uniqRunID": {
							"value": {
								"value": "@pipeline().RunId",
								"type": "Expression"
							},
							"type": "Guid"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "Control",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"PipelineName": {
				"type": "string"
			},
			"SourceSystemName": {
				"type": "string"
			},
			"SequenceGroup": {
				"type": "int"
			},
			"LoadType": {
				"type": "string"
			}
		},
		"variables": {
			"RunStart": {
				"type": "String"
			},
			"RunEnd": {
				"type": "String"
			},
			"Duration_SS": {
				"type": "String"
			}
		},
		"folder": {
			"name": "OH_D365_DataSync/Child Packages"
		},
		"annotations": [],
		"lastPublishTime": "2023-11-19T16:58:34Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}